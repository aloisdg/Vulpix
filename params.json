{
  "name": "Vulpix",
  "tagline": "Fast, unopinionated, minimalist web framework for .NET core inspired by express.js",
  "body": "Vulpix\r\n--------------\r\n\r\nFast, unopinionated, minimalist web framework for [.NET core](https://www.microsoft.com/net/core#windows).\r\n\r\n\r\n\r\n```c#\r\n\r\npublic static void Main(string[] args)\r\n{\r\n    var app = new Vulpix();\r\n    var foo = new MyController();\r\n    app.AddRoute(\"GET\",\"/\", foo.Index);\r\n    app.Use(new BodyParser().Exec);\r\n    app.Listen();\r\n}\r\npublic class MyController\r\n{\r\n    public async void Index(Req req, Res res)\r\n    {\r\n        await res.Response.WriteAsync(\"Hello World!\");\r\n    }\r\n}\r\npublic class BodyParser\r\n{\r\n    public async void Exec(Req req, Res res, Middleware middle){\r\n        System.Console.WriteLine(\"1 middleware\");\r\n        middle.Next(req,res);\r\n    }\r\n}\r\n\r\n```\r\n\r\n## Installation\r\nA nugget package exist, https://www.nuget.org/packages/VulpixServer/1.0.0\r\n\r\n## Features\r\n\r\n  * Middleware based\r\n  * Async everywhere\r\n  * Focus on high performance\r\n  * Robust and simple routing\r\n  * Use your template engine\r\n  * Middleware based\r\n  * Executable for generating applications quickly\r\n\r\n## Quick Start\r\nIf you dont have [.NET core](https://www.microsoft.com/net/core#windows), please install it before.\r\n\r\n Add VulpixServer as dependency\r\n\r\n```bash\r\n$ Install-Package VulpixServer\r\n```\r\n\r\n  Restore dependencies\r\n\r\n```bash\r\n$ cd Vulpix\r\n$ dotnet restore\r\n```\r\n  Add simple hello world as bellow:\r\n\r\n```c#\r\n\r\npublic static void Main(string[] args)\r\n{\r\n    var app = new Vulpix();\r\n    var foo = new MyController();\r\n    app.AddRoute(\"GET\",\"/\", (Req req, Res res)=>{\r\n      await res.Response.WriteAsync(\"Hello World!\");\r\n    });\r\n    app.Listen();\r\n}\r\n```\r\n  Start the server:\r\n\r\n```bash\r\n$ dotnet run\r\n```\r\n\r\nAnd you have a Hello World webserver listen port 5000\r\n\r\n## Philosophy\r\n\r\n  The Vulpix philosophy is to provide small, robust tooling for HTTP servers, making\r\n  it a great solution for single page applications, web sites, hybrids, or public\r\n  HTTP APIs.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}